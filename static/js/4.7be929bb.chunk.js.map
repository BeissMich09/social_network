{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.jsx","utils/validators/validators.js","hoc/withAuthRedirect.jsx","components/Dialogues/Dialogues.module.css","components/Dialogues/PersonDialogue/PersonDialogue.module.css","components/Dialogues/PersonDialogue/DialogueItem/DialogueItem.module.css","components/Dialogues/PrivateDialogues/PrivateDialogues.module.css","components/Dialogues/PrivateDialogues/Message/Message.module.css","components/Dialogues/PrivateDialogues/СloudSend/CloudSend.module.css","components/Dialogues/PersonDialogue/DialogueItem/DialogueItem.jsx","components/Dialogues/PersonDialogue/PersonDialogue.jsx","components/Dialogues/PrivateDialogues/Message/Message.jsx","components/Dialogues/PrivateDialogues/СloudSend/CloudSendForm.jsx","components/Dialogues/PrivateDialogues/СloudSend/CloudSendContainer.jsx","components/Dialogues/PrivateDialogues/PrivateDialogues.jsx","components/Dialogues/Dialogues.jsx","components/Dialogues/DialoguesContainer.jsx"],"names":["module","exports","FormControl","input","meta","touched","error","children","showError","className","style","formControl","Textarea","props","restProps","Input","createField","placeholder","name","validators","component","validate","requiredField","value","maxLengthCretor","maxLength","length","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Container","RedirectComponent","this","to","React","Component","connect","DialogueItem","item","activeClassName","active","id","src","alt","PersonDialogue","dialoguesElem","userArr","map","user","key","dialogue_item","Message","name_photo","message","maxLength100","reduxForm","form","newMessageText","onSubmit","handleSubmit","Field","dialoguesPage","dispatch","sendMessage","newMessage","sendMessageActionCreator","values","PrivateDialogues","messageElem","messageArr","messages","Dialogues","dialogues_content","compose"],"mappings":"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","file":"static/js/4.7be929bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3sotC\",\"error\":\"FormsControls_error__3p1eI\",\"formSummaryError\":\"FormsControls_formSummaryError__3BCwQ\",\"form_item\":\"FormsControls_form_item__16jZM\",\"remember\":\"FormsControls_remember__gsKH-\",\"rememberLable\":\"FormsControls_rememberLable__6LCTh\",\"checkbox\":\"FormsControls_checkbox__3hP9m\"};","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport style from \"./FormsControls.module.css\";\r\n\r\nconst FormControl = ({ input, meta: { touched, error }, children }) => {\r\n  const showError = touched && error;\r\n  return (\r\n    <div className={style.formControl + \" \" + (showError ? style.error : \"\")}>\r\n      <div>{children}</div>\r\n      {showError && <span>{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n  const { input, meta, ...restProps } = props;\r\n\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  const { input, meta, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const createField = (\r\n  placeholder,\r\n  name,\r\n  validators,\r\n  component,\r\n  props\r\n) => {\r\n  return (\r\n    <div>\r\n      <Field\r\n        component={component}\r\n        validate={validators}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        {...props}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","export const requiredField = (value) => {\r\n  if (value) return undefined;\r\n\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCretor = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n  return undefined;\r\n};\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Container) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) {\r\n        return <Redirect to=\"/login\" />;\r\n      }\r\n      return <Container {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogues_content\":\"Dialogues_dialogues_content__du7kf\",\"item\":\"Dialogues_item__2fnnk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogue_item\":\"PersonDialogue_dialogue_item__2Z1bh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogue_item\":\"DialogueItem_dialogue_item__BsJ3a\",\"item\":\"DialogueItem_item__Fk3of\",\"active\":\"DialogueItem_active__20Cdy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"PrivateDialogues_item__2Iir5\",\"messages\":\"PrivateDialogues_messages__RK4uv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Message_item__2ezuA\",\"name_photo\":\"Message_name_photo__1RqyE\",\"message\":\"Message_message__1OzXO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CloudSend_item__3zfVR\"};","import React from \"react\";\r\nimport style from \"./DialogueItem.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogueItem = props => {\r\n  return (\r\n    <div className={style.item}>\r\n      <NavLink activeClassName={style.active} to={\"/dialogues/\" + props.id}>\r\n      <img src=\"https://redcdn.net/topicit/images/no-avatar-1.png\" alt=\"\" />\r\n        {props.name}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogueItem;\r\n","import React from \"react\";\r\nimport style from \"./PersonDialogue.module.css\";\r\nimport DialogueItem from \"./DialogueItem/DialogueItem\";\r\n\r\nconst PersonDialogue = (props) => {\r\n  let dialoguesElem = props.userArr.map(user => (\r\n    <DialogueItem name={user.name} id={user.id} key = {user.id} />\r\n  ));\r\n  return <div className={style.dialogue_item}>{dialoguesElem}</div>;\r\n};\r\nexport default PersonDialogue;\r\n","import React from \"react\";\r\nimport style from \"./Message.module.css\";\r\n\r\nconst Message = props => {\r\n  return (\r\n    <div className={style.item}>\r\n      <div className={style.name_photo}>\r\n        <img src=\"https://redcdn.net/topicit/images/no-avatar-1.png\" alt=\"\" />\r\n        <p>{props.name}</p>\r\n      </div>\r\n      <div className={style.message}>\r\n        <p>{props.message}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport style from \"./CloudSend.module.css\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../../common/FormsControls/FormsControls\";\r\nimport {\r\n  requiredField,\r\n  maxLengthCretor,\r\n} from \"../../../../utils/validators/validators\";\r\n\r\nconst maxLength100 = maxLengthCretor(100);\r\n\r\nconst CloudSend = (props) => {\r\n  let newMessageText = props.newMessageText;\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={style.item}>\r\n      <Field\r\n        name=\"newMessage\"\r\n        validate={[requiredField, maxLength100]}\r\n        component={Textarea}\r\n        value={newMessageText}\r\n        placeholder=\"Введите ваше сообщение\"\r\n      ></Field>\r\n      <button>Send</button>\r\n    </form>\r\n  );\r\n};\r\nexport default reduxForm({ form: \"message\" })(CloudSend);\r\n","import React from \"react\";\r\nimport { sendMessageActionCreator } from \"../../../../Redux/dialogues_reducer\";\r\nimport CloudSend from \"./CloudSendForm\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst CloudSendContainer = (props) => {\r\n  let newMessage = (values) => {\r\n    props.sendMessage(values.newMessage);\r\n  };\r\n  return <CloudSend onSubmit={newMessage} />;\r\n};\r\n\r\nlet mapNewMessageText = (state) => {\r\n  return {\r\n    newMessageText: state.dialoguesPage.newMessageText,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessage) => {\r\n      dispatch(sendMessageActionCreator(newMessage));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapNewMessageText, mapDispatchToProps)(CloudSendContainer);\r\n","import React from \"react\";\r\nimport style from \"./PrivateDialogues.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport CloudSendContainer from \"./СloudSend/CloudSendContainer\";\r\n\r\nconst PrivateDialogues = (props) => {\r\n\r\n  let messageElem = props.messageArr.map((message) => (\r\n    <Message name={\"Nastya\"} message={message.message} id = {message.id} key = {message.id} />\r\n  ));\r\n  return (\r\n    <div className={style.item}>\r\n      <div className={style.messages}>{messageElem}</div>\r\n      <CloudSendContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrivateDialogues;\r\n","import React from \"react\";\r\nimport style from \"./Dialogues.module.css\";\r\nimport PersonDialogue from \"./PersonDialogue/PersonDialogue\";\r\nimport PrivateDialogues from \"./PrivateDialogues/PrivateDialogues\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Dialogues = (props) => {\r\n  if (!props.isAuth) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n  const { userArr, messageArr } = props.dialoguesPage;\r\n  return (\r\n    <div className={style.dialogues_content}>\r\n      <PersonDialogue userArr={userArr} />\r\n      <PrivateDialogues messageArr={messageArr} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogues;\r\n","import Dialogues from \"./Dialogues\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialoguesPage: state.dialoguesPage,\r\n  };\r\n};\r\n\r\nexport default compose(connect(mapStateToProps), withAuthRedirect)(Dialogues);\r\n"],"sourceRoot":""}