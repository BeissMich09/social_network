{"version":3,"sources":["components/common/FormsControls/FormsControls.jsx","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","hoc/withAuthRedirect.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","assets/img/user-avatar.png","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","assets/img/work_icon.svg","assets/img/no_work_icon.svg","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/NewPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["FormControl","input","meta","touched","error","children","showError","className","style","formControl","Textarea","props","restProps","Input","createField","placeholder","name","validators","component","validate","module","exports","requiredField","value","maxLengthCretor","maxLength","length","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Container","RedirectComponent","this","to","React","Component","connect","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","TypeError","Post","classProfile","item","message","src","alt","like","maxLength30","reduxForm","form","onSubmit","handleSubmit","add_news","Field","MyPosts","memo","postsElem","postData","map","post","likes","id","key","my_posts","values","addPost","newPost","added_news","MyPostsContainer","newPostTextChange","profilePage","newPostText","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onBlur","updateStatus","onChange","e","currentTarget","autoFocus","ProfileDataReduxForm","type","keys","profile","contacts","ProfileData","console","log","info","isOwner","onClick","goEditMode","fullName","lookingForAJob","workLogo","searchWorkLogo","lookingForAJobDescription","aboutMe","contsctTitle","contactValue","Contacts","contact","ProfileInfo","photo","photos","large","userPhoto","target","files","savePhoto","initialValues","formData","saveProfile","then","preloader","Preloader","Profile","content","ProfileContainer","refreshPrifile","userId","match","params","history","getUserProfile","getStatus","prevProps","compose","withRouter"],"mappings":"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","file":"static/js/5.4a400632.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport style from \"./FormsControls.module.css\";\r\n\r\nconst FormControl = ({ input, meta: { touched, error }, children }) => {\r\n  const showError = touched && error;\r\n  return (\r\n    <div className={style.formControl + \" \" + (showError ? style.error : \"\")}>\r\n      <div>{children}</div>\r\n      {showError && <span>{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n  const { input, meta, ...restProps } = props;\r\n\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  const { input, meta, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const createField = (\r\n  placeholder,\r\n  name,\r\n  validators,\r\n  component,\r\n  props\r\n) => {\r\n  return (\r\n    <div>\r\n      <Field\r\n        component={component}\r\n        validate={validators}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        {...props}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3sotC\",\"error\":\"FormsControls_error__3p1eI\",\"formSummaryError\":\"FormsControls_formSummaryError__3BCwQ\",\"form_item\":\"FormsControls_form_item__16jZM\",\"remember\":\"FormsControls_remember__gsKH-\",\"rememberLable\":\"FormsControls_rememberLable__6LCTh\",\"checkbox\":\"FormsControls_checkbox__3hP9m\"};","export const requiredField = (value) => {\r\n  if (value) return undefined;\r\n\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCretor = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n  return undefined;\r\n};\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Container) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) {\r\n        return <Redirect to=\"/login\" />;\r\n      }\r\n      return <Container {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","module.exports = __webpack_public_path__ + \"static/media/user-avatar.09001408.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__bR3gc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"my_posts\":\"MyPosts_my_posts__2RunZ\",\"add_news\":\"MyPosts_add_news__2gZv9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1MTGV\",\"message\":\"Post_message__3Ix7v\",\"like\":\"Post_like__18q8w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfileInfo_profile__10svT\",\"info\":\"ProfileInfo_info__3U8dc\",\"contact\":\"ProfileInfo_contact__2gqb4\"};","module.exports = __webpack_public_path__ + \"static/media/work_icon.c5c5641b.svg\";","module.exports = __webpack_public_path__ + \"static/media/no_work_icon.6a84f8e0.svg\";","import React from \"react\";\r\nimport classProfile from \"./Post.module.css\";\r\n\r\nconst Post = props => {\r\n  return (\r\n    <div className={classProfile.item}>\r\n      <div className={classProfile.message}>\r\n        <img\r\n          src=\"https://www.freeiconspng.com/uploads/man-icon-png-29.png\"\r\n          alt=\"\"\r\n        />\r\n        <p>{props.message}</p>\r\n      </div>\r\n      <hr />\r\n      <div className={classProfile.like}>\r\n        <span>like {props.like}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport classProfile from \"./MyPosts.module.css\";\r\nimport {\r\n  requiredField,\r\n  maxLengthCretor,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength30 = maxLengthCretor(30);\r\n\r\nlet NewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={classProfile.add_news}>\r\n      <Field\r\n        validate={[requiredField, maxLength30]}\r\n        name=\"newPost\"\r\n        component={Textarea}\r\n        placeholder=\"Your news\"\r\n      />\r\n      <button>Send</button>\r\n    </form>\r\n  );\r\n};\r\nexport default reduxForm({ form: \"post\" })(NewPostForm);\r\n","import React from \"react\";\r\nimport classProfile from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport NewPostForm from \"./NewPostForm\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let postsElem = props.postData.map((post) => (\r\n    <Post message={post.message} like={post.likes} id={post.id} key={post.id} />\r\n  ));\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPost);\r\n  };\r\n\r\n  return (\r\n    <div className={classProfile.my_posts}>\r\n      <div className=\"header_posts\">\r\n        <h4>My Posts</h4>\r\n      </div>\r\n      <NewPostForm onSubmit={onAddPost} />\r\n      <div className={classProfile.added_news}>{postsElem}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n","import { addPostActionCreator } from \"../../../Redux/profile_reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    newPostTextChange: state.profilePage.newPostText,\r\n    postData: state.profilePage.postData,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPost) => {\r\n      dispatch(addPostActionCreator(newPost));\r\n    },\r\n  };\r\n};\r\n\r\nlet MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activeteEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n  const deactiveteEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activeteEditMode}>\r\n            {props.status || \"-------\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onBlur={deactiveteEditMode}\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            value={status}\r\n          ></input>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport { createField, Input } from \"../../common/FormsControls/FormsControls\";\r\n// import workLogo from \"../../../assets/img/work_icon.svg\";\r\n// import searchWorkLogo from \"../../../assets/img/no_work_icon.svg\";\r\nimport { reduxForm } from \"redux-form\";\r\n\r\nconst ProfileDataForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <button>Сохранить изменения</button>\r\n\r\n      {props.error && <div>{props.error}</div>}\r\n      <h3>Information</h3>\r\n\r\n      <div>Full Name: {createField(\"Full Name\", \"fullName\", [], Input)}</div>\r\n      <div>\r\n        Job:{\" \"}\r\n        {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n      </div>\r\n      <div>\r\n        My professional skills:\r\n        {createField(\r\n          \"My professional skills\",\r\n          \"lookingForAJobDescription\",\r\n          [],\r\n          Input\r\n        )}\r\n      </div>\r\n      <div>About Me: {createField(\"About Me\", \"aboutMe\", [], Input)}</div>\r\n\r\n      <div>\r\n        Contacts:{\" \"}\r\n        {Object.keys(props.profile.contacts).map((key) => {\r\n          return (\r\n            <div key={key} className=\"contact\">\r\n              {key}: {createField(key, \"contacts.\" + key, [], Input)}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div>Status: {props.status}</div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProfileDataReduxForm = reduxForm({ form: \"edit-profile\" })(\r\n  ProfileDataForm\r\n);\r\n\r\nexport default ProfileDataReduxForm;\r\n","import React, { useState } from \"react\";\r\nimport style from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from \"./../../../assets/img/user-avatar.png\";\r\nimport workLogo from \"../../../assets/img/work_icon.svg\";\r\nimport searchWorkLogo from \"../../../assets/img/no_work_icon.svg\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  const mainPhotoSelected = (e) => {\r\n    if (e.target.files && e.target.files.length) {\r\n      props.savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (formData) => {\r\n    props.saveProfile(formData).then(() => {\r\n      setEditMode(false);\r\n    });\r\n  };\r\n\r\n  if (!props.profile) {\r\n    return (\r\n      <div className={style.preloader}>\r\n        <Preloader />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={style.profile}>\r\n      <div className={style.photo}>\r\n        <img\r\n          src={\r\n            props.profile.photos.large !== null\r\n              ? props.profile.photos.large\r\n              : userPhoto\r\n          }\r\n          alt=\"\"\r\n        />\r\n        {props.isOwner && <input onChange={mainPhotoSelected} type=\"file\" />}\r\n      </div>\r\n      {editMode ? (\r\n        <ProfileDataForm\r\n          initialValues={props.profile}\r\n          onSubmit={onSubmit}\r\n          profile={props.profile}\r\n        />\r\n      ) : (\r\n        <ProfileData\r\n          profile={props.profile}\r\n          isOwner={props.isOwner}\r\n          goEditMode={() => setEditMode(true)}\r\n        />\r\n      )}\r\n\r\n      <ProfileStatusWithHooks\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileData = (props) => {\r\n  console.log(props.profile);\r\n  return (\r\n    <div className={style.info}>\r\n      {props.isOwner && (\r\n        <button\r\n          onClick={() => {\r\n            props.goEditMode();\r\n          }}\r\n        >\r\n          Редактировать\r\n        </button>\r\n      )}\r\n      <h3>Information</h3>\r\n      <p>Full Name: {props.profile.fullName}</p>\r\n      <p>\r\n        Job:\r\n        {props.profile.lookingForAJob ? (\r\n          <img src={workLogo} alt=\"Есть работа\" />\r\n        ) : (\r\n          <img src={searchWorkLogo} alt=\"Нет работы\" />\r\n        )}\r\n      </p>\r\n      <p>Professional skills: {props.profile.lookingForAJobDescription}</p>\r\n      <p>About me: {props.profile.aboutMe}</p>\r\n      <div>\r\n        Contacts:{\" \"}\r\n        {Object.keys(props.profile.contacts).map((key) => {\r\n          if (props.profile.contacts[key]) {\r\n            return (\r\n              <Contacts\r\n                key={key}\r\n                contsctTitle={key}\r\n                contactValue={props.profile.contacts[key]}\r\n              />\r\n            );\r\n          } else {\r\n            return null;\r\n          }\r\n        })}\r\n      </div>\r\n      <div>Status: {props.status}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contacts = ({ contsctTitle, contactValue }) => {\r\n  return (\r\n    <div className={style.contact}>\r\n      {contsctTitle}: {contactValue}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport classProfile from \"./Profile.module.css\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={classProfile.content}>\r\n      <img\r\n        src=\"https://avatars.mds.yandex.net/get-pdb/1516664/09249b5a-9f96-419d-8d26-14d33b095ec2/s1200\"\r\n        alt=\"\"\r\n      />\r\n      <ProfileInfo\r\n        isOwner={props.isOwner}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        savePhoto={props.savePhoto}\r\n        saveProfile={props.saveProfile}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport classProfile from \"./Profile.module.css\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  savePhoto,\r\n  saveProfile,\r\n} from \"../../Redux/profile_reducer\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { getStatus, updateStatus } from \"./../../Redux/profile_reducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshPrifile = () => {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.userId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  };\r\n  componentDidMount() {\r\n    this.refreshPrifile();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId)\r\n      this.refreshPrifile();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classProfile.content}>\r\n        <Profile\r\n          isOwner={!this.props.match.params.userId}\r\n          {...this.props}\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n          updateStatus={this.props.updateStatus}\r\n          savePhoto={this.props.savePhoto}\r\n          saveProfile={this.props.saveProfile}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  userId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}